#fast code copy

# -*- coding: utf-8 -*-
"""
Created on Mon May 28 15:02:31 2018

@author: Jasmine
"""

import networkx as nx 


class compute_probability:

    global dico_nodes
    dico_nodes = {}

    global bpScore
    global bps
    bpScore = {'A':0, 'C':1, 'G':2, 'T':3}
    bps = ['A','C','G','T']

    #split the wordset into several non-overlapping wordsets and compute the total probability
    def scan_words (self,profile, words, print_tree = False, dico = True) :
        #print 'here'
        words.sort()
        n = len(words)
        L = len(words[0][1])
        first_word = 0
        proba = 1
        for i in range(1,len(words)) :
            if words[i][0] >= words[i-1][0] + L :
                proba *= 1 - self.compute_probability(profile, words[first_word:i])
                first_word = i
        proba *= 1 - self.compute_probability(profile, words[first_word:n])
        return 1 - proba



    def compute_probability (self,profile, words) :
        #print 'here 2'
        n = len(words)
        T = [0]*n
        T[0] = 1
        P = [0]*n
        P[0] = self.proba_w(profile, words[0])
        #dico_nodes = {}
        for i in range (1,n) :
            root, dico_nodes = self.build_tree(words[0:i+1], profile, P)
            T[i] = dico_nodes[root]
            P[i] = P[i-1] + self.proba_w(profile, words[i])*T[i]
        return P[n-1]

        
        
    #compute the probability of one word    
    def proba_w(self,profile, word) :
        #print 'here 3'
        w = word[1]
        q = word[0]
        res = 1
        for (i, l) in enumerate(w) :
            res *= profile[q+i][bpScore[l]]
        return res


    #build the tree with root value P(/w0, ..., /w(i-1)|wi) if wordset = {w0, ..., wi} and store the value of its nodes in the dictionnary dico_nodes
    def build_tree (self, wordset, profile, P) :
        tree = nx.DiGraph()
        L = len(wordset[0][1])
        a = wordset[0][0]
        n = len(wordset)    
        
        words = []
        last = wordset[-1][1]
        q = wordset[-1][0]
        for (i, w) in enumerate(wordset[0:n-1]) :
            shift = w[0] + L -q
            if shift > 0 :
                if w[1][L - shift:L] == last[0:shift] :
                    words.append(i)
            else :
                words.append(i)
        
        if words == [] :
            root = ((), '')
            dico_nodes[root] = 1
            return root, dico_nodes
        
        seq = '.'*(q-a) + last
        q2 = wordset[words[-1]][0]
        seq = seq[0:q2 + L - a]
        root = (tuple(words), seq)
        
        if seq[-1] == '.' :
            dico_nodes[root] = 1 - P[words[-1]]
            return root, dico_nodes
        if root in dico_nodes :
            return root, dico_nodes
        tree.add_node(1, node = root)
        
        cr = 1 #current node
        nn = 1 #number of nodes
        
        while root not in dico_nodes :
            seq = tree.nodes[cr]['node'][1]
            fst = 0
            while seq[fst] == '.' :
                fst += 1
            fst -= 1
            
            for l in "ATCG" : #create the four sons of the current node
                seq = tree.nodes[cr]['node'][1]
                words = list(tree.nodes[cr]['node'][0])
                seq = seq[0:fst] + l + seq[fst + 1:len(seq)]
                v = profile[fst + a][bpScore[l]]
                
                #test if the probability is 0
                add = True
                if len(seq) - fst >= L :
                    i = 0
                    while add and i < len(words) :
                        if wordset[words[i]][1] in seq :
                            add = False
                        i += 1
                    if not add :
                        node = (tuple(words), seq)
                        nn += 1
                        tree.add_node(nn, node = node)
                        tree.add_edge(cr, nn, value = v)
                        dico_nodes[node] = 0
                
                if add :
                    #delete non-compatible words
                    liste = tuple(words)
                    for i in liste :
                        shift = wordset[i][0] + L - a - fst
                        if shift > 0 :
                            if wordset[i][1][L - shift:L] != seq[fst:fst + shift] : 
                                words.remove(i)
                
                    if words == [] :
                        node = ((), '')
                        dico_nodes[node] = 1
                        nn += 1
                        tree.add_node(nn, node = node)
                        tree.add_edge(cr, nn, value = v)
                    
                    else :
                        #delete end seq
                        q2 = wordset[words[-1]][0]
                        seq = seq[0:q2 + L - a]
                        node = (tuple(words), seq)
                        if seq[-1] == '.' :
                            nn += 1
                            tree.add_node(nn, node = node)
                            tree.add_edge(cr, nn, value = v)
                            dico_nodes[node] = 1 - P[words[-1]]
                        else :
                            nn += 1
                            tree.add_node(nn, node = node)
                            tree.add_edge(cr, nn, value = v)
            
            #compute the value of the tree nodes, departing from the leaves
            valeurs_fils = True
            for fils in tree.successors(cr) :
                if tree.nodes[fils]['node'] not in dico_nodes :
                    valeurs_fils = False
            while root not in dico_nodes and valeurs_fils :
                val = 0
                for fils in tree.successors(cr) :
                    val += dico_nodes[tree.nodes[fils]['node']]*tree.edges[cr, fils]['value']
                dico_nodes[tree.nodes[cr]['node']] = val
                if cr != 1 :
                    cr = list(tree.predecessors(cr))[0]
                valeurs_fils = True
                for fils in tree.successors(cr) :
                    if tree.nodes[fils]['node'] not in dico_nodes :
                        valeurs_fils = False
            if root not in dico_nodes :
                i = 0
                while tree.nodes[list(tree.successors(cr))[i]]['node'] in dico_nodes :
                    i += 1
                cr = list(tree.successors(cr))[i]
        
        return root, dico_nodes




'''
examples
'''
#words = [(0,'ACTG'), (1, 'ATGA'), (4, 'AACT'), (4, 'ACCT'), (6, 'CTAG'), (7, 'TAGG')]
#profile = [{'A' : 1, 'T' : 0, 'C' : 0, 'G' : 0}, {'A' : 0.5, 'T' : 0, 'C' : 0.5, 'G' : 0}, {'A' : 0.1, 'T' : 0.8, 'C' : 0, 'G' : 0.1}, {'A' : 0, 'T' : 0, 'C' : 0, 'G' : 1}, {'A' : 0.5, 'T' : 0.2, 'C' : 0.2, 'G' : 0.1}, {'A' : 0.4, 'T' : 0.4, 'C' : 0.1, 'G' : 0.1}, {'A' : 0, 'T' : 0.25, 'C' : 0.75, 'G' : 0}, {'A' : 0.1, 'T' : 0.9, 'C' : 0, 'G' : 0}, {'A' : 0.1, 'T' : 0.4, 'C' : 0, 'G' : 0.5}, {'A' : 0.25, 'T' : 0.25, 'C' : 0.25, 'G' : 0.25}, {'A' : 0, 'T' : 0, 'C' : 0, 'G' : 1}]

#words = [(0,'AATC'), (2, 'TCAA'), (3, 'CAAG'), (6, 'GGTG')]
#profile = [{'A' : 1, 'T' : 0, 'C' : 0, 'G' : 0}, {'A' : 0.7, 'T' : 0.1, 'C' : 0.1, 'G' : 0.1}, {'A' : 0, 'T' : 1, 'C' : 0, 'G' : 0}, {'A' : 0.25, 'T' : 0.25, 'C' : 0.25, 'G' : 0.25}, {'A' : 0.4, 'T' : 0.2, 'C' : 0.2, 'G' : 0.2}, {'A' : 0.7, 'T' : 0.1, 'C' : 0.1, 'G' : 0.1}, {'A' : 0.1, 'T' : 0.1, 'C' : 0.1, 'G' : 0.7}, {'A' : 0, 'T' : 0, 'C' : 0, 'G' : 1}, {'A' : 0.25, 'T' : 0.25, 'C' : 0.25, 'G' : 0.25}, {'A' : 0.2, 'T' : 0.2, 'C' : 0.2, 'G' : 0.4}]

#words = [(1, 'ACT'), (2, 'CTT'), (5, 'ACT'), (5, 'AGT'), (7, 'TTT'), (8, 'TAA'), (9, 'AAC'), (11, 'CCA'), (12, 'ACG'), (15, 'GGG')]
#profile = [{'A' : 1, 'T' : 0, 'C' : 0, 'G' : 0}, {'A' : 0.5, 'T' : 0, 'C' : 0.25, 'G' : 0.25}, {'A' : 0.1, 'T' : 0.2, 'C' : 0.6, 'G' : 0.1}, {'A' : 0, 'T' : 1, 'C' : 0, 'G' : 0}, {'A' : 0, 'T' : 0.9, 'C' : 0.1, 'G' : 0}, {'A' : 0.5, 'T' : 0, 'C' : 0.25, 'G' : 0.25}, {'A' : 0, 'T' : 0.1, 'C' : 0.6, 'G' : 0.3}, {'A' : 0.2, 'T' : 0.4, 'C' : 0.2, 'G' : 0.2}, {'A' : 0, 'T' : 1, 'C' : 0, 'G' : 0}, {'A' : 0.6, 'T' : 0.3, 'C' : 0.1, 'G' : 0}, {'A' : 0.9, 'T' : 0.1, 'C' : 0, 'G' : 0}, {'A' : 0, 'T' : 0, 'C' : 1, 'G' : 0}, {'A' : 0.5, 'T' : 0, 'C' : 0.5, 'G' : 0}, {'A' : 0.5, 'T' : 0, 'C' : 0.5, 'G' : 0}, {'A' : 0, 'T' : 0, 'C' : 0.3, 'G' : 0.7}, {'A' : 0, 'T' : 0, 'C' : 0, 'G' : 1}, {'A' : 0.1, 'T' : 0, 'C' : 0, 'G' : 0.9}, {'A' : 0, 'T' : 0.1, 'C' : 0.1, 'G' : 0.8}]


#words = [(0, 'AGC'), (2, 'CAG')]
#profile = [{'A' : 0.7, 'T' : 0.1, 'C' : 0.1, 'G' : 0.1}, {'A' : 0.2, 'T' : 0.2, 'C' : 0.2, 'G' : 0.4}, {'A' : 0.05, 'T' : 0.05, 'C' : 0.85, 'G' : 0.05}, {'A' : 1, 'T' : 0, 'C' : 0, 'G' : 0}, {'A' : 0.1, 'T' : 0.1, 'C' : 0.1, 'G' : 0.7}, {'A' : 0.55, 'T' : 0.15, 'C' : 0.15, 'G' : 0.15}]

#words = [[34, 'ACATCTAAAAC'], [35, 'CATCTAAAACA'], [38, 'CTAAAACACTA'], [37, 'TCTAAAACACT'], [32, 'CCACATCTAAA'], [31, 'GCCACATCTAA'], [33, 'CACATCTAAAA'], [161, 'TAGGTCCCTCC'], [162, 'AGGTCCCTCCC'], [128, 'ACTCGTCTCGC'], [39, 'TAAAACACTAC'], [82, 'TGGGATGTTTG'], [30, 'TGCCACATCTA'], [163, 'GGTCCCTCCCT'], [81, 'CTGGGATGTTT'], [132, 'GTCTCGCATGC'], [127, 'CACTCGTCTCG'], [155, 'GCGATCTAGGT'], [28, 'ATTGCCACATC'], [158, 'ATCTAGGTCCC'], [125, 'GCCACTCGTCT'], [133, 'TCTCGCATGCT'], [156, 'CGATCTAGGTC'], [40, 'AAAACACTACT'], [138, 'CATGCTATGAA'], [29, 'TTGCCACATCT'], [159, 'TCTAGGTCCCT'], [137, 'GCATGCTATGA'], [131, 'CGTCTCGCATG'], [129, 'CTCGTCTCGCA'], [164, 'GTCCCTCCCTA'], [88, 'GTTTGTCAGTT'], [160, 'CTAGGTCCCTC'], [130, 'TCGTCTCGCAT'], [121, 'ATCGGCCACTC'], [89, 'TTTGTCAGTTT'], [154, 'CGCGATCTAGG'], [120, 'CATCGGCCACT'], [83, 'GGGATGTTTGT'], [84, 'GGATGTTTGTC'], [16, 'CCCGTCACAAC'], [87, 'TGTTTGTCAGT'], [19, 'GTCACAACCAT'], [123, 'CGGCCACTCGT'], [135, 'TCGCATGCTAT'], [119, 'GCATCGGCCAC'], [80, 'ACTGGGATGTT'], [113, 'CGCTAGGCATC'], [90, 'TTGTCAGTTTG'], [134, 'CTCGCATGCTA'], [14, 'TCCCCGTCACA'], [85, 'GATGTTTGTCA'], [15, 'CCCCGTCACAA'], [114, 'GCTAGGCATCG'], [62, 'AGTGAATCCGG'], [115, 'CTAGGCATCGG'], [97, 'TTTGAGATACG'], [18, 'CGTCACAACCA'], [27, 'CATTGCCACAT'], [20, 'TCACAACCATT'], [41, 'AAACACTACTA'], [22, 'ACAACCATTGC'], [126, 'CCACTCGTCTC'], [42, 'AACACTACTAG'], [122, 'TCGGCCACTCG'], [165, 'TCCCTCCCTAC'], [21, 'CACAACCATTG'], [17, 'CCGTCACAACC'], [24, 'AACCATTGCCA'], [26, 'CCATTGCCACA'], [140, 'TGCTATGAATT'], [153, 'GCGCGATCTAG'], [60, 'CTAGTGAATCC'], [112, 'CCGCTAGGCAT'], [111, 'CCCGCTAGGCA'], [96, 'GTTTGAGATAC'], [136, 'CGCATGCTATG'], [11, 'ACCTCCCCGTC'], [23, 'CAACCATTGCC'], [61, 'TAGTGAATCCG'], [139, 'ATGCTATGAAT'], [63, 'GTGAATCCGGG'], [66, 'AATCCGGGTAA'], [64, 'TGAATCCGGGT'], [151, 'CTGCGCGATCT'], [79, 'AACTGGGATGT'], [13, 'CTCCCCGTCAC'], [78, 'CAACTGGGATG'], [94, 'CAGTTTGAGAT'], [12, 'CCTCCCCGTCA'], [91, 'TGTCAGTTTGA'], [128, 'ACTCATCTCGC'], [31, 'GCAACATCTAA'], [127, 'CACTCGTCTGG'], [132, 'GTCTTGCATGC'], [161, 'TAGGTCCCCCC'], [31, 'GCTACATCTAA'], [131, 'CGTCTAGCCTG'], [128, 'ACTCGTCTAGC'], [32, 'CGACATCTAAA']]


#words = [[38, 'CTAAAACACTA'], [31, 'GCCACATCTAA'], [33, 'CACATCTAAAA'], [28, 'ATTGCCACATC'], [133, 'TCTCGCATGCT'], [137, 'GCATGCTATGA'], [129, 'CTCGTCTCGCA'], [16, 'CCCGTCACAAC'], [135, 'TCGCATGCTAT'], [124, 'GGCCACTCGTC'], [85, 'GATGTTTGTCA'], [15, 'CCCCGTCACAA'], [18, 'CGTCACAACCA'], [22, 'ACAACCATTGC'], [122, 'TCGGCCACTCG'], [17, 'CCGTCACAACC'], [24, 'AACCATTGCCA'], [68, 'TCCGGGTAATC'], [140, 'TGCTATGAATT'], [60, 'CTAGTGAATCC'], [61, 'TAGTGAATCCG'], [64, 'TGAATCCGGGT'], [13, 'CTCCCCGTCAC'], [78, 'CAACTGGGATG'], [94, 'CAGTTTGAGAT'], [12, 'CCTCCCCGTCA'], [91, 'TGTCAGTTTGA'], [33, 'GACATCTAAAA'], [132, 'GTCTGGCTTGC'], [132, 'GTCTGGCATGC'], [88, 'GTTTGACAGTT'], [133, 'TCTAGCATGCC'], [120, 'CATCAGGCACT'], [25, 'ACAATTGCCAC'], [34, 'ACTTCTAAAAC'], [113, 'CGCTACGCATC'], [125, 'GCCACTCTTCT'], [29, 'TTGCTACGTCT'], [31, 'GCCACGTCTAA'], [125, 'GACACTCTTCT'], [37, 'TCTAAAAGACT'], [34, 'ACCTCTAAAAC'], [37, 'TTTAAAAAACT'], [19, 'GTCACAACAAT'], [128, 'ACTCGTCTCGC'], [81, 'CTGGGATGTTT'], [157, 'GTTCTAGGTCC'], [133, 'TCTCGCATGCA'], [25, 'ACGATTGCAAC'], [161, 'TAGGTCCCCCC'], [132, 'GTCTAGCTTGC'], [19, 'GTCACAACTAT'], [132, 'GTCTCGCCTGC'], [161, 'TAGGTCACTCC'], [82, 'TGTGATGTTTG'], [31, 'GCCACATCGAA'], [137, 'GCTTGCTATGA'], [34, 'ACATATAAAAC'], [62, 'AGTAAATCCGG'], [121, 'ATCGGGCACTC'], [30, 'TGCCACATTTA'], [34, 'ACATTTAAAAC'], [128, 'ACTCATCTTGC'], [132, 'GTCTCGCTTGC'], [81, 'CTGGGAAGTTT'], [34, 'ACATGTAAAAT'], [133, 'TCTTGCCTGCT'], [133, 'TCTAGCATGCT'], [132, 'GTCTGGCGTGC'], [162, 'AGGTCCCTCCC'], [19, 'GTCACAACGAT'], [132, 'GTCTAGCCTGC'], [34, 'ACATCAAAAAC'], [158, 'ATCTGGGTCCC'], [133, 'TCTCGCGTGCT'], [163, 'GGTCCCGCCCT'], [89, 'TTTGTCAGTTT'], [32, 'CAACGTCTAAA'], [128, 'ACTCGTCTTGC'], [81, 'CTGGGACGTTT'], [38, 'CTAAAAAACTA'], [31, 'GCCACCTCTAA'], [38, 'CTAAAACACGA'], [38, 'TTAAAACACTA'], [40, 'AAAACACTACT'], [157, 'GATCTAGGTCC'], [163, 'GGTCCCACCCT'], [120, 'CATCGGTCACT'], [113, 'CGCTATGCATC'], [34, 'ACATCGAAAAC'], [37, 'TCTAAAATACT'], [132, 'GTCTTGCATGC'], [31, 'GCAACATCTAA'], [38, 'GTAAAAGACTA'], [31, 'GCGACATCTAA'], [155, 'GCGATCTAGGT'], [81, 'CTGGGAGGTTT'], [113, 'CGCTAGGCATC'], [32, 'CTACATCTAAA'], [125, 'GCCACTCCTCT']]

#profile = [{'A': 0.0570940299705, 'C': 0.209200927105, 'T': 0.569684799806, 'G': 0.164020243118}, {'A': 0.09540046602, 'C': 0.830050856276, 'T': 0.0601949224168, 'G': 0.0143537552872}, {'A': 0.844685298291, 'C': 0.105691763269, 'T': 0.00427717092482, 'G': 0.0453457675155}, {'A': 0.336774244197, 'C': 0.136665080496, 'T': 0.201977427048, 'G': 0.324583248259}, {'A': 0.857075500752, 'C': 0.086812924277, 'T': 0.0541587607731, 'G': 0.00195281419747}, {'A': 0.370576252469, 'C': 0.602605732571, 'T': 0.0135492806196, 'G': 0.0132687343408}, {'A': 0.795172635104, 'C': 0.000518066422802, 'T': 0.0321903204364, 'G': 0.172118978037}, {'A': 0.197977786548, 'C': 0.655675355041, 'T': 0.0320335530435, 'G': 0.114313305367}, {'A': 0.282910486464, 'C': 0.162902581165, 'T': 0.212578768482, 'G': 0.34160816389}, {'A': 0.0346386431703, 'C': 0.668321884467, 'T': 0.0886409992892, 'G': 0.208398473074}, {'A': 0.271250934807, 'C': 0.602459227451, 'T': 0.0389960438248, 'G': 0.0872937939179}, {'A': 0.11277024966, 'C': 0.165530135082, 'T': 0.322853412988, 'G': 0.39884620227}, {'A': 0.974032876955, 'C': 0.0161699746223, 'T': 0.00767515542835, 'G': 0.00212199299466}, {'A': 0.207684637574, 'C': 0.489729155089, 'T': 0.130236488867, 'G': 0.17234971847}, {'A': 0.932941857163, 'C': 0.0602972991939, 'T': 0.00177181252539, 'G': 0.0049890311179}, {'A': 0.476820201027, 'C': 0.463897397745, 'T': 0.051314633105, 'G': 0.00796776812319}, {'A': 0.653370693528, 'C': 0.149329758823, 'T': 0.180911284115, 'G': 0.0163882635341}, {'A': 0.988545805557, 'C': 0.00882354505178, 'T': 0.00169649028465, 'G': 0.000934159106968}, {'A': 0.0467289334402, 'C': 0.771148812272, 'T': 0.12781455266, 'G': 0.0543077016282}, {'A': 0.630761737717, 'C': 0.158096274151, 'T': 0.142643712336, 'G': 0.0684982757951}, {'A': 0.829116234519, 'C': 0.120131062359, 'T': 0.0318008828112, 'G': 0.0189518203104}, {'A': 0.373693101112, 'C': 0.524239162484, 'T': 0.0222311146019, 'G': 0.0798366218017}, {'A': 0.799909198801, 'C': 0.0986277961246, 'T': 0.0879140957352, 'G': 0.0135489093396}, {'A': 0.480461421852, 'C': 0.0969386517261, 'T': 0.0302307126511, 'G': 0.392369213771}, {'A': 0.353453605735, 'C': 0.125006902052, 'T': 0.412953342271, 'G': 0.108586149943}, {'A': 0.0949372437068, 'C': 0.480780471039, 'T': 0.282977286715, 'G': 0.141304998539}, {'A': 0.791501879272, 'C': 0.182582155966, 'T': 0.000133657250808, 'G': 0.0257823075111}, {'A': 0.584020517327, 'C': 0.00621230626804, 'T': 0.179231177046, 'G': 0.230535999359}, {'A': 0.27385540342, 'C': 0.0397781670573, 'T': 0.209267250511, 'G': 0.477099179012}, {'A': 0.842454903491, 'C': 0.115443643201, 'T': 0.00730648299143, 'G': 0.0347949703169}, {'A': 0.721783012264, 'C': 0.00829015158851, 'T': 0.244183129612, 'G': 0.025743706536}, {'A': 0.752913702998, 'C': 0.0700101822066, 'T': 0.113852844025, 'G': 0.0632232707701}, {'A': 0.468208105921, 'C': 0.518012325882, 'T': 0.00697016457981, 'G': 0.00680940361758}, {'A': 0.800606336676, 'C': 0.104528565057, 'T': 0.0115089638031, 'G': 0.0833561344642}, {'A': 0.40636718827, 'C': 0.079896327247, 'T': 0.064428321837, 'G': 0.449308162646}, {'A': 0.859420219838, 'C': 0.069594465132, 'T': 0.034471650856, 'G': 0.0365136641745}, {'A': 0.644166714883, 'C': 0.0899937593807, 'T': 0.13725747734, 'G': 0.128582048397}, {'A': 0.974369948661, 'C': 0.00585495582276, 'T': 0.00456407264603, 'G': 0.0152110228698}, {'A': 0.966973618542, 'C': 0.0239409365279, 'T': 0.00535360467969, 'G': 0.00373184025039}, {'A': 0.981152295075, 'C': 0.00129530080554, 'T': 0.0131362179747, 'G': 0.00441618614454}, {'A': 0.0292466221417, 'C': 0.785969450967, 'T': 0.165409762639, 'G': 0.0193741642518}, {'A': 0.0695048964611, 'C': 0.610398447208, 'T': 0.0113970221072, 'G': 0.308699634224}, {'A': 0.290810719322, 'C': 0.0646319931746, 'T': 0.427973528844, 'G': 0.216583758659}, {'A': 0.187952884237, 'C': 0.194059635574, 'T': 0.114629807613, 'G': 0.503357672577}, {'A': 0.915810091404, 'C': 0.00836950937995, 'T': 0.0254667659172, 'G': 0.0503536332989}, {'A': 0.00429532367131, 'C': 0.575949729285, 'T': 0.334815489351, 'G': 0.0849394576925}, {'A': 0.897856134707, 'C': 0.0436885456112, 'T': 0.0144134877187, 'G': 0.0440418319634}, {'A': 0.286264464434, 'C': 0.712785554898, 'T': 0.000650930096237, 'G': 0.000299050571609}, {'A': 0.908488753304, 'C': 0.0472177478158, 'T': 0.0332699063085, 'G': 0.0110235925718}, {'A': 0.565395671367, 'C': 0.180869039923, 'T': 0.00197773959948, 'G': 0.251757549111}, {'A': 0.905150743337, 'C': 0.0319652277151, 'T': 0.0606824580267, 'G': 0.00220157092127}, {'A': 0.728014513913, 'C': 0.160624422812, 'T': 0.010677772791, 'G': 0.100683290484}, {'A': 0.527853349783, 'C': 0.0404533381693, 'T': 0.0107474748584, 'G': 0.420945837189}, {'A': 0.14805921085, 'C': 0.59824356633, 'T': 0.0832251918674, 'G': 0.170472030952}, {'A': 0.214018217661, 'C': 0.100425104719, 'T': 0.0545031048616, 'G': 0.631053572758}, {'A': 0.566058930465, 'C': 0.166046584149, 'T': 0.156495685907, 'G': 0.11139879948}, {'A': 0.832156103922, 'C': 0.166520754029, 'T': 0.00112213978202, 'G': 0.000201002266475}, {'A': 0.301605876243, 'C': 0.596541774665, 'T': 0.0700079166176, 'G': 0.0318444324743}, {'A': 0.276543948511, 'C': 0.358394551075, 'T': 0.189085027715, 'G': 0.175976472699}, {'A': 0.203714711811, 'C': 0.257049751724, 'T': 0.241731277022, 'G': 0.297504259443}, {'A': 0.843022568557, 'C': 0.0123352245774, 'T': 0.0281694996988, 'G': 0.116472707166}, {'A': 0.839790494182, 'C': 0.0739972965014, 'T': 0.0355590352994, 'G': 0.0506531740171}, {'A': 0.389155038085, 'C': 0.402698094797, 'T': 0.108038342956, 'G': 0.100108524163}, {'A': 0.147914894069, 'C': 0.186539469507, 'T': 0.553258150321, 'G': 0.112287486103}, {'A': 0.463850070175, 'C': 0.522239317569, 'T': 0.0132889258647, 'G': 0.000621686391707}, {'A': 0.977638732942, 'C': 0.0108245713432, 'T': 0.00568076269426, 'G': 0.00585593302084}, {'A': 0.101455167676, 'C': 0.481088525073, 'T': 0.4117963377, 'G': 0.00565996955103}, {'A': 0.4417916993, 'C': 0.298301362563, 'T': 0.0190608798912, 'G': 0.240846058245}, {'A': 0.217261571087, 'C': 0.597882016204, 'T': 0.0720082991964, 'G': 0.112848113512}, {'A': 0.991562871001, 'C': 0.000598096456669, 'T': 0.00330124795324, 'G': 0.00453778458895}, {'A': 0.11591735434, 'C': 0.218703829943, 'T': 0.0381113196894, 'G': 0.627267496028}, {'A': 0.440576865495, 'C': 0.554279618959, 'T': 0.00277649292185, 'G': 0.00236702262384}, {'A': 0.33121913652, 'C': 0.221682930041, 'T': 0.313688002754, 'G': 0.133409930685}, {'A': 0.455270238684, 'C': 0.0627063496225, 'T': 0.123084636262, 'G': 0.358938775431}, {'A': 0.845877386619, 'C': 0.0591794146993, 'T': 0.00529758395253, 'G': 0.089645614729}, {'A': 0.76060770069, 'C': 0.0159068010917, 'T': 0.08787349702, 'G': 0.135612001199}, {'A': 0.713402118317, 'C': 0.0553426246245, 'T': 0.166647142124, 'G': 0.0646081149342}, {'A': 0.972311542188, 'C': 0.0195939198448, 'T': 0.00209419756624, 'G': 0.00600034040132}, {'A': 0.521313709962, 'C': 0.350454770196, 'T': 0.00669835437591, 'G': 0.121533165467}, {'A': 0.984472559524, 'C': 0.00239167425129, 'T': 0.0127747147548, 'G': 0.000361051469528}, {'A': 0.523708944019, 'C': 0.423270747894, 'T': 0.0291524137318, 'G': 0.0238678943554}, {'A': 0.738262630078, 'C': 0.236546143559, 'T': 0.0225848937031, 'G': 0.00260633265982}, {'A': 0.225179117779, 'C': 0.371409753506, 'T': 0.207695525341, 'G': 0.195715603373}, {'A': 0.598454026896, 'C': 0.284766603812, 'T': 0.0339042223835, 'G': 0.0828751469085}, {'A': 0.323112730596, 'C': 0.613757363592, 'T': 0.0475908366467, 'G': 0.0155390691655}, {'A': 0.367414989748, 'C': 0.41212932308, 'T': 0.0348478594141, 'G': 0.185607827758}, {'A': 0.533595580516, 'C': 0.0897894112782, 'T': 0.199520961443, 'G': 0.177094046763}, {'A': 0.856441213254, 'C': 0.140198827912, 'T': 0.000885446482036, 'G': 0.00247451235165}, {'A': 0.303863110528, 'C': 0.221276071605, 'T': 0.31476755098, 'G': 0.160093266886}, {'A': 0.472888499161, 'C': 0.24044341205, 'T': 0.032322061302, 'G': 0.254346027487}, {'A': 0.0642992602664, 'C': 0.296656227192, 'T': 0.276044793493, 'G': 0.362999719049}, {'A': 0.3877656761, 'C': 0.557373193976, 'T': 0.00262018560767, 'G': 0.052240944316}, {'A': 0.298883712727, 'C': 0.57977002975, 'T': 0.0216288261284, 'G': 0.0997174313945}, {'A': 0.505507693854, 'C': 0.0359144572926, 'T': 0.00560214449887, 'G': 0.452975704354}, {'A': 0.0786637300004, 'C': 0.178970841281, 'T': 0.320713776897, 'G': 0.421651651822}, {'A': 0.355386715174, 'C': 0.112399687771, 'T': 0.146944443062, 'G': 0.385269153993}, {'A': 0.729655536591, 'C': 0.229368915609, 'T': 0.0243472855676, 'G': 0.016628262233}, {'A': 0.583858771054, 'C': 0.312594741024, 'T': 0.0674243291328, 'G': 0.0361221587896}, {'A': 0.460086375287, 'C': 0.236514184064, 'T': 0.11763819996, 'G': 0.18576124069}, {'A': 0.51379572878, 'C': 0.334169986599, 'T': 0.113741096938, 'G': 0.0382931876834}, {'A': 0.099696628533, 'C': 0.772295493513, 'T': 0.0713051846723, 'G': 0.0567026932817}, {'A': 0.887542929397, 'C': 0.0983963648505, 'T': 0.00539027659866, 'G': 0.00867042915394}, {'A': 0.67303002206, 'C': 0.25168950178, 'T': 0.0540125143559, 'G': 0.021267961804}, {'A': 0.355419698951, 'C': 0.246675525108, 'T': 0.135892720782, 'G': 0.262012055159}, {'A': 0.90586097291, 'C': 0.0133539577653, 'T': 0.072086977103, 'G': 0.00869809222127}, {'A': 0.950402870658, 'C': 0.0212794400459, 'T': 0.0268781532657, 'G': 0.00143953603067}, {'A': 0.298699055832, 'C': 0.586145539272, 'T': 0.0946399691331, 'G': 0.0205154357626}, {'A': 0.374954180651, 'C': 0.564262507482, 'T': 0.00502860026891, 'G': 0.055754711598}, {'A': 0.470302967083, 'C': 0.338825140296, 'T': 0.12488742648, 'G': 0.0659844661407}, {'A': 0.632254335679, 'C': 0.027317897042, 'T': 0.153264538798, 'G': 0.18716322848}, {'A': 0.766390593445, 'C': 0.169200557524, 'T': 0.0546433962996, 'G': 0.00976545273063}, {'A': 0.810286748792, 'C': 0.0114022446008, 'T': 0.0414313061651, 'G': 0.136879700442}, {'A': 0.39672692146, 'C': 0.578774771412, 'T': 0.0219475344483, 'G': 0.00255077267969}, {'A': 0.370748522487, 'C': 0.451152720634, 'T': 0.167969060294, 'G': 0.0101296965852}, {'A': 0.857980396464, 'C': 0.00455860646155, 'T': 0.0260210128419, 'G': 0.111439984232}, {'A': 0.892567478722, 'C': 0.0645119960067, 'T': 0.0244815480184, 'G': 0.0184389772527}, {'A': 0.142430735319, 'C': 0.774302698996, 'T': 0.0708798272288, 'G': 0.0123867384562}, {'A': 0.412485315996, 'C': 0.0968725922546, 'T': 0.221906614796, 'G': 0.268735476953}, {'A': 0.296288244388, 'C': 0.280852764757, 'T': 0.150903354014, 'G': 0.27195563684}, {'A': 0.217336589693, 'C': 0.00187107882484, 'T': 0.0520703521855, 'G': 0.728721979297}, {'A': 0.0242227690873, 'C': 0.913864319688, 'T': 0.00589917639639, 'G': 0.0560137348285}, {'A': 0.868485142689, 'C': 0.0743894783809, 'T': 0.0127381381566, 'G': 0.0443872407739}, {'A': 0.404746603795, 'C': 0.138999112701, 'T': 0.423077947016, 'G': 0.0331763364874}, {'A': 0.632965596547, 'C': 0.319118068988, 'T': 0.00535817602753, 'G': 0.0425581584371}, {'A': 0.77192410284, 'C': 0.215499548998, 'T': 0.00950058084905, 'G': 0.00307576731321}, {'A': 0.674460580469, 'C': 0.264332579283, 'T': 0.0522255341134, 'G': 0.00898130613524}, {'A': 0.79281455287, 'C': 0.202498579461, 'T': 0.000389989859159, 'G': 0.00429687781023}, {'A': 0.21093512305, 'C': 0.101821152723, 'T': 0.366864608645, 'G': 0.320379115582}, {'A': 0.607643644817, 'C': 0.230874885228, 'T': 0.118433258922, 'G': 0.0430482110327}, {'A': 0.0881178138088, 'C': 0.751474302257, 'T': 0.111596342082, 'G': 0.0488115418522}, {'A': 0.231582490716, 'C': 0.746847344311, 'T': 0.00107190014971, 'G': 0.020498264824}, {'A': 0.810090043635, 'C': 0.187559740116, 'T': 0.00160940586723, 'G': 0.000740810380957}, {'A': 0.19402411685, 'C': 0.0344364226415, 'T': 0.133689044381, 'G': 0.637850416128}, {'A': 0.304034375954, 'C': 0.137942311005, 'T': 0.527957412211, 'G': 0.0300659008298}, {'A': 0.695960208367, 'C': 0.104335176175, 'T': 0.178520060244, 'G': 0.0211845552138}, {'A': 0.43144141525, 'C': 0.340396609429, 'T': 0.108791932997, 'G': 0.119370042324}, {'A': 0.634817657608, 'C': 0.124118242036, 'T': 0.144948231565, 'G': 0.0961158687913}, {'A': 0.431318446168, 'C': 0.310368161382, 'T': 0.143935912383, 'G': 0.114377480066}, {'A': 0.680024079971, 'C': 0.247430310573, 'T': 0.0108934948622, 'G': 0.0616521145932}, {'A': 0.604727639084, 'C': 0.297299486926, 'T': 0.064615905113, 'G': 0.0333569688762}, {'A': 0.438999875029, 'C': 0.301787850298, 'T': 0.040783679907, 'G': 0.218428594765}, {'A': 0.643572951546, 'C': 0.310590556842, 'T': 0.0306013863339, 'G': 0.0152351052784}, {'A': 0.620172791456, 'C': 0.0648337612674, 'T': 0.180915242881, 'G': 0.134078204396}, {'A': 0.929922089853, 'C': 0.0536027670179, 'T': 0.0157639728359, 'G': 0.000711170293153}, {'A': 0.56520479958, 'C': 0.264373277396, 'T': 0.0810327299603, 'G': 0.0893891930641}, {'A': 0.252417050756, 'C': 0.219154763171, 'T': 0.39309792865, 'G': 0.135330257423}, {'A': 0.528188932359, 'C': 0.280421866959, 'T': 0.1606364841, 'G': 0.0307527165822}, {'A': 0.713053926713, 'C': 0.0022591990658, 'T': 0.108754111317, 'G': 0.175932762904}, {'A': 0.809452829468, 'C': 0.178303383482, 'T': 0.0102971927448, 'G': 0.00194659430455}, {'A': 0.96309664956, 'C': 0.0193340862541, 'T': 0.0155565790521, 'G': 0.00201268513387}, {'A': 0.880070435787, 'C': 0.0768429935145, 'T': 0.00884572060606, 'G': 0.0342408500927}, {'A': 0.205111676129, 'C': 0.177019440891, 'T': 0.0750605831483, 'G': 0.542808299832}, {'A': 0.206233871768, 'C': 0.65460652246, 'T': 0.0985993296513, 'G': 0.0405602761209}, {'A': 0.99385229562, 'C': 0.00553989370312, 'T': 0.000368840052374, 'G': 0.000238970624968}, {'A': 0.904442355314, 'C': 0.0180759443442, 'T': 0.00653170427861, 'G': 0.0709499960637}, {'A': 0.0653889447085, 'C': 0.694634282643, 'T': 0.196202450122, 'G': 0.0437743225273}, {'A': 0.485917878959, 'C': 0.292859775984, 'T': 0.166879081967, 'G': 0.0543432630897}, {'A': 0.343233492196, 'C': 0.380718416632, 'T': 0.0849381223623, 'G': 0.19110996881}, {'A': 0.0651799900358, 'C': 0.317862927414, 'T': 0.264155924726, 'G': 0.352801157824}, {'A': 0.766402946558, 'C': 0.196138662976, 'T': 0.00881287580549, 'G': 0.0286455146603}, {'A': 0.0251368606256, 'C': 0.397875821673, 'T': 0.480998512563, 'G': 0.0959888051385}, {'A': 0.768096830362, 'C': 0.019487396007, 'T': 0.019302918658, 'G': 0.193112854973}, {'A': 0.434279462168, 'C': 0.166352133198, 'T': 0.291048554397, 'G': 0.108319850238}, {'A': 0.17121000688, 'C': 0.125084865819, 'T': 0.646298317423, 'G': 0.057406809878}, {'A': 0.495337748001, 'C': 0.40747985782, 'T': 0.0835466423454, 'G': 0.0136357518332}, {'A': 0.810559843567, 'C': 0.0276482202259, 'T': 0.0878116899705, 'G': 0.0739802462362}, {'A': 0.925627606055, 'C': 0.0515927744509, 'T': 0.00857689432759, 'G': 0.0142027251668}, {'A': 0.286151399881, 'C': 0.614342433306, 'T': 0.00712659980417, 'G': 0.0923795670085}, {'A': 0.108902337262, 'C': 0.832078750276, 'T': 0.0231883688627, 'G': 0.0358305435992}, {'A': 0.742385168778, 'C': 0.0831819931876, 'T': 0.154944651288, 'G': 0.019488186747}, {'A': 0.0958300386551, 'C': 0.489202035548, 'T': 0.211013315408, 'G': 0.203954610389}, {'A': 0.117901257566, 'C': 0.299167252643, 'T': 0.149787901321, 'G': 0.43314358847}, {'A': 0.359758408141, 'C': 0.0311734575615, 'T': 0.0707313032247, 'G': 0.538336831073}, {'A': 0.234339195177, 'C': 0.376888537449, 'T': 0.221222917114, 'G': 0.167549350261}, {'A': 0.632097273874, 'C': 0.29232512803, 'T': 0.069686550955, 'G': 0.00589104714121}, {'A': 0.717851552494, 'C': 0.196322360675, 'T': 0.00280248641364, 'G': 0.0830236004178}, {'A': 0.381990713389, 'C': 0.58359147668, 'T': 0.0212555063358, 'G': 0.0131623035953}, {'A': 0.447417181496, 'C': 0.0690899917478, 'T': 0.0389240620833, 'G': 0.444568764673}, {'A': 0.346230854492, 'C': 0.633568804876, 'T': 0.0112069094386, 'G': 0.00899343119373}, {'A': 0.449105648508, 'C': 0.491505333825, 'T': 0.0433386112191, 'G': 0.0160504064484}, {'A': 0.248240931925, 'C': 0.0999034737488, 'T': 0.060547137194, 'G': 0.591308457133}, {'A': 0.38010045452, 'C': 0.0716637656301, 'T': 0.0393883048718, 'G': 0.508847474978}, {'A': 0.414971742065, 'C': 0.00119067653625, 'T': 0.306261982541, 'G': 0.277575598858}, {'A': 0.0951783456969, 'C': 0.40359365953, 'T': 0.454000473489, 'G': 0.0472275212835}, {'A': 0.803032678598, 'C': 0.0311300754677, 'T': 0.056268772246, 'G': 0.109568473689}, {'A': 0.259686666182, 'C': 0.601915146419, 'T': 0.0565403411916, 'G': 0.0818578462078}, {'A': 0.29281069437, 'C': 0.0983154514939, 'T': 0.267436009717, 'G': 0.341437844419}, {'A': 0.935789195791, 'C': 0.0575196470939, 'T': 0.00458108245612, 'G': 0.0021100746588}, {'A': 0.00574583292691, 'C': 0.423147749909, 'T': 0.269000883621, 'G': 0.302105533543}, {'A': 0.882479652165, 'C': 0.100213803652, 'T': 0.00963699409676, 'G': 0.00766955008681}, {'A': 0.228435606987, 'C': 0.197909481153, 'T': 0.0459965169027, 'G': 0.527658394957}, {'A': 0.513943652586, 'C': 0.0925787365557, 'T': 0.0954944896257, 'G': 0.297983121232}, {'A': 0.549548721678, 'C': 0.0179853851089, 'T': 0.209523862284, 'G': 0.22294203093}, {'A': 0.397291342088, 'C': 0.272627786865, 'T': 0.053230026688, 'G': 0.276850844359}, {'A': 0.776494600305, 'C': 0.19323320135, 'T': 0.0234401134953, 'G': 0.00683208485039}, {'A': 0.0998613612293, 'C': 0.894431400227, 'T': 0.000168288920473, 'G': 0.00553894962329}, {'A': 0.577590148714, 'C': 0.00854211538211, 'T': 0.101204514925, 'G': 0.312663220979}, {'A': 0.876239921347, 'C': 0.0420757537389, 'T': 0.0466539032452, 'G': 0.0350304216692}, {'A': 0.484728186942, 'C': 0.18134711645, 'T': 0.275133547673, 'G': 0.0587911489348}, {'A': 0.163184541439, 'C': 0.496200033311, 'T': 0.0835146583951, 'G': 0.257100766855}]
#words = [[29, 'AAACAGAAAAA'], [29, 'AAACAAAAAAA'], [29, 'AAAAAGAAAAA'], [29, 'AAAAAAAAAAA'], [29, 'ATACAGAAAAA'], [29, 'ATACAAAAAAA'], [29, 'ATAAAGAAAAA'], [29, 'ATAAAAAAAAA'], [29, 'AAACAGATAAA'], [29, 'AAACAGAGAAA'], [29, 'AAACAAATAAA'], [29, 'AAAAAGATAAA'], [29, 'AAACAAAGAAA'], [29, 'AAAAAGAGAAA'], [29, 'AAACACAAAAA'], [29, 'AAAAAAATAAA'], [29, 'AAAAAAAGAAA'], [29, 'AAAAACAAAAA'], [29, 'AATCAGAAAAA'], [29, 'AAACATAAAAA'], [29, 'AAACAGACAAA'], [29, 'CAACAGAAAAA'], [29, 'AATCAAAAAAA'], [29, 'AATAAGAAAAA'], [29, 'AAACCGAAAAA'], [29, 'AAAAATAAAAA'], [29, 'AAACAAACAAA'],[12, 'ACAAAACAACA'], [12, 'ACACAACAACA'], [12, 'ACAAAACAAAA'], [12, 'ACACAACAAAA'], [12, 'AAAAAACAACA'], [12, 'AAACAACAACA'], [12, 'AGAAAACAACA'], [12, 'AGACAACAACA'], [12, 'AAAAAACAAAA'], [12, 'AAACAACAAAA'], [12, 'ACAATACAACA'], [12, 'ACACTACAACA'], [12, 'ATAAAACAACA'], [12, 'ATACAACAACA'], [12, 'AGAAAACAAAA'], [12, 'ACAAAACCACA'], [12, 'AGACAACAAAA'], [12, 'ACACAACCACA'], [145, 'TAAAAAGCAAC'], [145, 'AAAAAAGCAAC'], [145, 'CAAAAAGCAAC'], [145, 'TCAAAAGCAAC'], [145, 'TAAAAAACAAC'], [145, 'GAAAAAGCAAC'], [145, 'ACAAAAGCAAC'], [145, 'TAAAAACCAAC'], [145, 'TAAAAAGAAAC'], [145, 'TTAAAAGCAAC'], [145, 'CCAAAAGCAAC'], [145, 'TAAAAAGCAAT'], [145, 'TAGAAAGCAAC'], [69, 'AGCAAAAAAAA'], [69, 'AGCTAAAAAAA'], [69, 'AGAAAAAAAAA'], [69, 'AGCAGAAAAAA'], [69, 'AGATAAAAAAA'], [69, 'AGCTGAAAAAA'], [69, 'AGCAAAAAACA'], [69, 'AGCCAAAAAAA'], [69, 'AGCTAAAAACA'], [69, 'AGAAGAAAAAA'], [69, 'AGATGAAAAAA'], [69, 'AGAAAAAAACA'], [69, 'AGACAAAAAAA'], [69, 'AGCAGAAAACA'], [69, 'AGCCGAAAAAA'], [69, 'AGATAAAAACA'], [69, 'AGCTGAAAACA'], [44, 'ACACAAAAACG'], [44, 'ACACAAAAGCG'], [44, 'ATACAAAAACG'], [44, 'ATACAAAAGCG'], [44, 'ACACAGAAACG'], [44, 'ACAAAAAAACG'], [44, 'ACACAGAAGCG'], [44, 'ACACAAAAACA'], [44, 'ACAAAAAAGCG'], [44, 'ACACACAAACG'], [44, 'ACACAAAAAGG'], [44, 'ACACAAAAGCA'], [44, 'ATACAGAAACG'], [44, 'ACACACAAGCG'], [44, 'ACACAAAAAAG'], [111, 'ACCAACAAGCA'], [111, 'ACCAACACGCA'], [111, 'ACCAACAGGCA'], [111, 'ACAAACAAGCA'], [111, 'ACAAACACGCA'], [111, 'ACAAACAGGCA'], [111, 'AACAACAAGCA'], [111, 'ACCAACGAGCA'], [111, 'AACAACACGCA'], [111, 'AACAACAGGCA']]

#words = [['AAACAGAAAAA', 29], ['AAACAAAAAAA', 29], ['AAAAAGAAAAA', 29], ['AAAAAAAAAAA', 29], ['ATACAGAAAAA', 29], ['ATACAAAAAAA', 29], ['ATAAAGAAAAA', 29], ['ATAAAAAAAAA', 29], ['AAACAGATAAA', 29], ['AAACAGAGAAA', 29], ['AAACAAATAAA', 29], ['AAAAAGATAAA', 29], ['AAACAAAGAAA', 29], ['AAAAAGAGAAA', 29], ['AAACACAAAAA', 29], ['AAAAAAATAAA', 29], ['AAAAAAAGAAA', 29], ['AAAAACAAAAA', 29], ['AATCAGAAAAA', 29], ['AAACATAAAAA', 29], ['AAACAGACAAA', 29], ['CAACAGAAAAA', 29], ['AATCAAAAAAA', 29], ['AATAAGAAAAA', 29], ['AAACCGAAAAA', 29], ['AAAAATAAAAA', 29], ['AAACAAACAAA', 29], ['ACAAAACAACA', 12], ['ACACAACAACA', 12], ['ACAAAACAAAA', 12], ['ACACAACAAAA', 12], ['AAAAAACAACA', 12], ['AAACAACAACA', 12], ['AGAAAACAACA', 12], ['AGACAACAACA', 12], ['AAAAAACAAAA', 12], ['AAACAACAAAA', 12], ['ACAATACAACA', 12], ['ACACTACAACA', 12], ['ATAAAACAACA', 12], ['ATACAACAACA', 12], ['AGAAAACAAAA', 12], ['ACAAAACCACA', 12], ['AGACAACAAAA', 12], ['ACACAACCACA', 12], ['TAAAAAGCAAC', 145], ['AAAAAAGCAAC', 145], ['CAAAAAGCAAC', 145], ['TCAAAAGCAAC', 145], ['TAAAAAACAAC', 145], ['GAAAAAGCAAC', 145], ['ACAAAAGCAAC', 145], ['TAAAAACCAAC', 145], ['TAAAAAGAAAC', 145], ['TTAAAAGCAAC', 145], ['CCAAAAGCAAC', 145], ['TAAAAAGCAAT', 145], ['TAGAAAGCAAC', 145], ['AGCAAAAAAAA', 69], ['AGCTAAAAAAA', 69], ['AGAAAAAAAAA', 69], ['AGCAGAAAAAA', 69], ['AGATAAAAAAA', 69], ['AGCTGAAAAAA', 69], ['AGCAAAAAACA', 69], ['AGCCAAAAAAA', 69], ['AGCTAAAAACA', 69], ['AGAAGAAAAAA', 69], ['AGATGAAAAAA', 69], ['AGAAAAAAACA', 69], ['AGACAAAAAAA', 69], ['AGCAGAAAACA', 69], ['AGCCGAAAAAA', 69], ['AGATAAAAACA', 69], ['AGCTGAAAACA', 69], ['ACACAAAAACG', 44], ['ACACAAAAGCG', 44], ['ATACAAAAACG', 44], ['ATACAAAAGCG', 44], ['ACACAGAAACG', 44], ['ACAAAAAAACG', 44], ['ACACAGAAGCG', 44], ['ACACAAAAACA', 44], ['ACAAAAAAGCG', 44], ['ACACACAAACG', 44], ['ACACAAAAAGG', 44], ['ACACAAAAGCA', 44], ['ATACAGAAACG', 44], ['ACACACAAGCG', 44], ['ACACAAAAAAG', 44], ['ACCAACAAGCA', 111], ['ACCAACACGCA', 111], ['ACCAACAGGCA', 111], ['ACAAACAAGCA', 111], ['ACAAACACGCA', 111], ['ACAAACAGGCA', 111], ['AACAACAAGCA', 111], ['ACCAACGAGCA', 111], ['AACAACACGCA', 111], ['AACAACAGGCA', 111]]


#print len(words)
#print len(profile)

#print(self.scan_words(profile, words))
#score = scan_words(profile, words)
#print score